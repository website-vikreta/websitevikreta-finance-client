{"version":3,"file":"static/js/496.89bfde6a.chunk.js","mappings":"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","sources":["components/Items/ItemForm.js","components/PopupModals/Popup.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport FileBase64 from 'react-file-base64';\n\nimport { toast } from 'react-toastify';\nimport Cookie from 'universal-cookie';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TextField, Container, FormHelperText, FormControlLabel, FormLabel, RadioGroup, Radio } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport styled from \"@emotion/styled\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createItem } from '../../api/index';\nimport '../../styles/itemform.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Date = styled(DatePicker)`\n    width: 300px\n`;\n\nconst ItemForm = (props) => {\n\n   let user = JSON.parse(localStorage.getItem('user-info'));\n\n   const [itemData, setItemData] = useState({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '', userId: user.id });\n   const { title, amount, category, paymentType, dateOfInvoice, dateOfPayment, description, paymentProof, userId } = itemData;\n\n   const { setRender, showModal, setShowModal } = props;\n\n   const loadingRef = useRef(false);\n\n   var cookie = new Cookie();\n   cookie.set('user', userId, { path: '/' })\n   const [errors, setErrors] = useState({\n      title: {\n         value: title,\n         error: false,\n         errorMessage: ''\n      },\n      amount: {\n         value: amount,\n         error: false,\n         errorMessage: ''\n      },\n      category: {\n         value: category,\n         error: false,\n         errorMessage: ''\n      },\n      paymentType: {\n         value: paymentType,\n         error: false,\n         errorMessage: ''\n      },\n      dateOfInvoice: {\n         value: dateOfInvoice,\n         error: false,\n         errorMessage: ''\n      },\n      dateOfPayment: {\n         value: dateOfPayment,\n         error: false,\n         errorMessage: ''\n      }\n   })\n\n   function validateItemDetails() {\n\n      loadingRef.current = true;\n\n      const errorFields = Object.keys(errors);\n      let newErrorValues = { ...errors }\n      let values = Object.values(itemData)\n      let countErrors = 0;\n      for (let index = 0; index < errorFields.length; index++) {\n         const currentField = errorFields[index];\n         const currentValue = values[index];\n         \n         if (currentValue === '' || ((currentField === 'dateOfInvoice'|| currentField === 'dateOfPayment') && currentValue === null)) {\n            countErrors = countErrors + 1;\n            newErrorValues = {\n               ...newErrorValues,\n               [currentField]: {\n                  ...newErrorValues[currentField],\n                  error: true,\n                  errorMessage: 'This field is required'\n               }\n            }\n         }\n\n      }\n      \n\n      setErrors(newErrorValues);\n      if (countErrors !== 0) loadingRef.current = false;\n      if (countErrors === 0) addItemDetails();\n      setTimeout(() => {\n         loadingRef.current = false;\n\n      }, 2000);\n\n   }\n   const addItemDetails = async () => {\n\n      await createItem(itemData);\n      setShowModal({ ...showModal, openDialog: false });\n      setRender('addSet');\n\n      toast.success(\"Item Added Successfully!!\", {\n         position: \"top-center\",\n         autoClose: 2000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         theme: \"light\",\n      });\n   }\n\n   const clear = () => {\n      setItemData({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '' });\n   }\n\n   const onValueChange = (e) => {\n\n      setErrors({\n         ...errors,\n         [e.target.name]: {\n            ...errors[e.target.name],\n            error: false,\n            errorMessage: ''\n         }\n      })\n      setItemData({ ...itemData, [e.target.name]: e.target.value })\n   }\n   const setDateOfInvoice = (date) => {\n      setItemData({ ...itemData, dateOfInvoice: date })\n      setErrors({...errors, dateOfInvoice: {...errors[dateOfInvoice], error: false, errorMessage: ''}})\n   }\n   const setDateOfPayment = (date) => {\n      setItemData({ ...itemData, dateOfPayment: date })\n      setErrors({...errors, dateOfPayment: {...errors[dateOfPayment], error: false, errorMessage: ''}})\n   }\n\n   const handleImageData = (img) => {\n\n      setItemData({ ...itemData, paymentProof: img });\n      const validExtensions = ['png', 'jpeg', 'jpg', 'pdf'];\n      const fileExtension = img.split(';')[0].split('/')[1]\n      if (!validExtensions.includes(fileExtension)) {\n         alert('File must be in img and pdf format');\n      }\n      const newRes = (img.length * (3 / 4)) - 2;\n      const size = (newRes / (1024 * 1024)); //1048576;2,560,181\n\n      if (size > 1.5) {\n         alert('File limit exceed');\n      }\n      console.log(paymentProof);\n\n   }\n\n   return (\n\n      <Container>\n         <div className=\"item-form\">\n            <div >\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Item Title <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField variant='outlined' fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  error={(errors.title.error)}\n                  helperText={(errors.title.error && errors.title.errorMessage)}\n                  name='title' value={title}\n                  size=\"small\"\n               ></TextField>\n            </div>\n            <div >\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Amount <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField type={'text'} onChange={(e) => onValueChange(e)}\n                  name='amount' fullWidth\n                  error={(errors.amount.error) || (amount !== '' && !amount.match(/^\\d+$/))}\n                  helperText={(errors.amount.error && errors.amount.errorMessage) || (!amount.match(/^\\d+$/) && amount !== '' ? 'Only digits are allowed' : '')}\n                  value={amount}\n                  size=\"small\"\n               ></TextField>\n            </div>\n\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Category <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  name='category'\n                  error={(errors.category.error)}\n                  helperText={(errors.category.error && errors.category.errorMessage)}\n                  value={category}\n                  size=\"small\"\n               ></TextField>\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Payment Type <span className=\"text-danger\">*</span></FormLabel>\n\n               <RadioGroup row\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  name=\"paymentType\"\n                  value={paymentType}\n                  onChange={(e) => onValueChange(e)}\n               >\n                  <FormControlLabel value=\"Income\" control={<Radio required={true} />} label=\"Income\" />\n                  <FormControlLabel value=\"Expense\" control={<Radio required={true} />} label=\"Expense\" />\n               </RadioGroup>\n               <FormHelperText error>{errors.paymentType.errorMessage}</FormHelperText>\n            </div>\n            <div className=\"grid grid-2\">\n               <div sx={{padding: '20px'}}>\n                  <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Date of Invoice <span className=\"text-danger\">*</span></FormLabel>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                     <Date\n                        name='dateOfInvoice'\n                        renderInput={(params) => <TextField {...params} size=\"small\" />}\n                        value={dateOfInvoice}\n                        onChange={(date) => setDateOfInvoice(date)}\n                     />\n                  </LocalizationProvider>\n                 <FormHelperText error>{errors.dateOfInvoice.error && errors.dateOfInvoice.errorMessage}</FormHelperText>\n               </div>\n               <div>\n                  <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Date of Payment <span className=\"text-danger\">*</span></FormLabel>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                     <Date\n                        name='dateOfPayment'\n                        renderInput={(params) => <TextField {...params} size=\"small\" />}\n                        value={dateOfPayment}\n                        onChange={(date) => setDateOfPayment(date)}\n                     />\n                  </LocalizationProvider>\n                  <FormHelperText error>{errors.dateOfPayment.error && errors.dateOfPayment.errorMessage}</FormHelperText>\n               </div>\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Description</FormLabel>\n\n               <TextField\n                  multiline rows={5}\n                  fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  name='description'\n                  value={description}\n                  size=\"small\"\n               ></TextField>\n\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Payment Proof</FormLabel>\n               \n               <span className=\"input-file\" >\n                  <FileBase64\n                     type=\"file\"\n                     sx={{ display: 'none' }}\n                     multiple={false}\n                     onDone={({ base64 }) => { handleImageData(base64) }}\n                  />\n               </span>\n\n            </div>\n\n            <div className=\"grid grid-2 mt-4\">\n               <button className=\"btn btn-secondary btn-danger\" onClick={() => clear()}>\n                  Reset\n               </button>\n               <button className=\"btn btn-primary\" disabled={loadingRef.current} onClick={() => validateItemDetails()}>\n                  {loadingRef.current ? 'Adding...' : 'Add Item'}\n                  {loadingRef.current && <FontAwesomeIcon icon=\"spinner\" spin />}\n               </button>\n            </div>\n         </div>\n\n      </Container >\n\n\n   );\n}\n\nexport default ItemForm;","import { Button, Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport ItemForm from \"../Items/ItemForm\";\nimport EditItem from \"../Items/EditItem\";\n\nexport default function Popup(props) {\n\n   const { setRender, showModal, setShowModal, formType } = props;\n   const { openDialog, currItem } = showModal;\n   return (\n      <Dialog open={openDialog} maxWidth='md'>\n         <DialogTitle>\n            <div style={{ display: 'flex' }}>\n               <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                  {formType} Item Details\n               </Typography>\n               <Button\n                  sx={{ padding: 0, minWidth: 0 }}\n                  color=\"secondary\"\n                  onClick={() => setShowModal({ ...showModal, openDialog: false })}>\n                  <CloseIcon />\n               </Button>\n            </div>\n         </DialogTitle>\n         <DialogContent dividers sx={{ paddingY: 2, paddingX: 0 }}>\n            {formType === 'Add' ? <ItemForm setRender={setRender} showModal={showModal} setShowModal={setShowModal} /> : <EditItem setRender={setRender} cItem={currItem} showModal={showModal} setShowModal={setShowModal} />}\n         </DialogContent>\n      </Dialog>\n   );\n}"],"names":["Date","styled","DatePicker","props","user","JSON","parse","localStorage","getItem","useState","title","amount","category","paymentType","dateOfInvoice","dateOfPayment","description","paymentProof","userId","id","itemData","setItemData","setRender","showModal","setShowModal","loadingRef","useRef","Cookie","set","path","value","error","errorMessage","errors","setErrors","addItemDetails","createItem","openDialog","toast","position","autoClose","hideProgressBar","closeOnClick","theme","onValueChange","e","target","name","Container","className","FormLabel","TextField","variant","fullWidth","type","onChange","helperText","size","match","RadioGroup","row","FormControlLabel","control","Radio","required","label","FormHelperText","sx","padding","LocalizationProvider","dateAdapter","AdapterDayjs","renderInput","params","date","setDateOfInvoice","setDateOfPayment","multiline","rows","display","multiple","onDone","img","fileExtension","split","includes","alert","length","console","log","handleImageData","base64","onClick","disabled","current","errorFields","Object","keys","newErrorValues","values","countErrors","index","currentField","currentValue","setTimeout","validateItemDetails","icon","spin","Popup","formType","currItem","Dialog","open","maxWidth","DialogTitle","style","Typography","component","flexGrow","Button","minWidth","color","Close","DialogContent","dividers","paddingY","paddingX","EditItem","cItem"],"sourceRoot":""}