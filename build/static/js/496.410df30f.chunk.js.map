{"version":3,"file":"static/js/496.410df30f.chunk.js","mappings":"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","sources":["components/Items/ItemForm.js","components/PopupModals/Popup.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js"],"sourcesContent":["import { useState } from \"react\";\nimport FileBase64 from 'react-file-base64';\nimport { toast } from 'react-toastify';\nimport Cookie from 'universal-cookie';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TextField, Button, Container, FormHelperText, FormControlLabel, FormLabel, Table, RadioGroup, Radio } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport styled from \"@emotion/styled\";\n\nimport { createItem } from '../../api/index';\nimport '../../styles/ItemForm.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Date = styled(DatePicker)`\n    width: 250px\n`;\nconst StyledTable = styled(Table)`\n    width: 200px;\n   \n`;\n\nconst ItemForm = (props) => {\n\n    let user = JSON.parse(localStorage.getItem('user-info'));\n\n    const [itemData, setItemData] = useState({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '', userId: user.id });\n    const { title, amount, category, paymentType, dateOfInvoice, dateOfPayment, description, paymentProof, userId } = itemData;\n\n    const { setRender, showModal, setShowModal } = props;\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    var cookie = new Cookie();\n    cookie.set('user', userId, { path: '/' })\n    const [errors, setErrors] = useState({\n        title: {\n            value: title,\n            error: false,\n            errorMessage: ''\n        },\n        amount: {\n            value: amount,\n            error: false,\n            errorMessage: ''\n        },\n        category: {\n            value: category,\n            error: false,\n            errorMessage: ''\n        },\n        paymentType: {\n            value: paymentType,\n            error: false,\n            errorMessage: ''\n        },\n        dateOfInvoice: {\n            value: dateOfInvoice,\n            error: false,\n            errorMessage: ''\n        },\n        dateOfPayment: {\n            value: dateOfPayment,\n            error: false,\n            errorMessage: ''\n        }\n    })\n    \n    function validateItemDetails(){\n        setIsLoading(true);\n        const errorFields = Object.keys(errors);\n        let newErrorValues = { ...errors }\n        let values = Object.values(itemData)\n        let cnt = 0;\n        for (let index = 0; index < errorFields.length; index++) {\n            const currentField = errorFields[index];\n            const currentValue = values[index];\n            if (currentValue === '') {\n                cnt = cnt + 1;\n                newErrorValues = {\n                    ...newErrorValues,\n                    [currentField]: {\n                        ...newErrorValues[currentField],\n                        error: true,\n                        errorMessage: 'This field is required'\n                    }\n                }\n            }\n\n        }\n\n        setErrors(newErrorValues);\n        if (cnt === 0) { \n            addItemDetails();\n        }\n        setIsLoading(false);\n    }\n    const addItemDetails = async () => {\n\n        await createItem(itemData);\n        setShowModal({ ...showModal, openDialog: false });\n        setRender('addSet');\n\n        toast.success(\"Item Added Successfully!!\", {\n            position: \"top-center\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            theme: \"light\",\n        });\n    }\n    const buttonDisabled = isLoading ? true : false;\n    console.log('butondsables', buttonDisabled, 'isloadingz', isLoading);\n    const clear = () => {\n        setItemData({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '' });\n    }\n\n    const onValueChange = (e) => {\n\n        setErrors({\n            ...errors,\n            [e.target.name]: {\n                ...errors[e.target.name],\n                error: false,\n                errorMessage: ''\n            }\n        })\n        setItemData({ ...itemData, [e.target.name]: e.target.value })\n    }\n\n    const handleImageData = (img) => {\n\n        setItemData({ ...itemData, paymentProof: img });\n        const validExtensions = ['png', 'jpeg', 'jpg', 'pdf'];\n        const fileExtension = img.split(';')[0].split('/')[1]\n        if (!validExtensions.includes(fileExtension)) {\n            alert('File must be in img and pdf format');\n        }\n        const newRes = (img.length * (3 / 4)) - 2;\n        const size = (newRes / (1024 * 1024)); //1048576;2,560,181\n\n        if (size > 1.5) {\n            alert('File limit exceed');\n        }\n        console.log(paymentProof);\n\n    }\n\n    return (\n\n        <Container >\n\n            <StyledTable>\n                <table>\n                    <thead></thead>\n                    <tbody>\n                        <tr>\n                            <td colSpan='2'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Item Title</FormLabel>\n\n                                <TextField variant='outlined' fullWidth\n                                    type={'text'} onChange={(e) => onValueChange(e)}\n                                    error={(errors.title.error)}\n                                    helperText={(errors.title.error && errors.title.errorMessage)}\n\n                                    name='title' value={title}\n                                ></TextField>\n\n                            </td>\n\n                        </tr>\n                        <tr >\n                            <td colSpan='2'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Amount</FormLabel>\n\n                                <TextField type={'text'} onChange={(e) => onValueChange(e)}\n                                    name='amount' fullWidth\n                                    error={(errors.amount.error) || (amount !== '' && !amount.match(/^\\d+$/))}\n                                    helperText={(errors.amount.error && errors.amount.errorMessage) || (!amount.match(/^\\d+$/) && amount !== '' ? 'Only digits are allowed' : ' ')}\n                                    value={amount}\n                                ></TextField>\n\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td colSpan='2' >\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Category</FormLabel>\n\n                                <TextField fullWidth\n                                    type={'text'} onChange={(e) => onValueChange(e)}\n                                    name='category'\n                                    error={(errors.category.error)}\n                                    helperText={(errors.category.error && errors.category.errorMessage)}\n                                    value={category}\n                                ></TextField>\n\n                            </td>\n\n                        </tr>\n                        <tr>\n                            <td className='tr-row'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Payment Type</FormLabel>\n\n                                <RadioGroup row\n                                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                                    name=\"paymentType\"\n                                    value={paymentType}\n                                    onChange={(e) => onValueChange(e)}\n                                >\n                                    <FormControlLabel value=\"Income\" control={<Radio required={true} />} label=\"Income\" />\n                                    <FormControlLabel value=\"Expense\" control={<Radio required={true} />} label=\"Expense\" />\n                                </RadioGroup>\n                                <FormHelperText error>{errors.paymentType.errorMessage}</FormHelperText>\n\n                            </td>\n                        </tr>\n                        <tr >\n                            <td className='tr-row'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Date of Invoice</FormLabel>\n\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                    <Date\n                                        name='dateOfInvoice'\n                                        renderInput={(params) => <TextField {...params} />}\n                                        value={dateOfInvoice}\n                                        onChange={((date) => setItemData({ ...itemData, dateOfInvoice: date }))}\n\n                                    />\n                                </LocalizationProvider>\n                            </td>\n                            <td>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Date of Payment</FormLabel>\n\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                    <Date\n                                        name='dateOfPayment'\n                                        renderInput={(params) => <TextField {...params} />}\n                                        value={dateOfPayment}\n                                        onChange={((date) => setItemData({ ...itemData, dateOfPayment: date }))}\n                                    />\n                                </LocalizationProvider>\n\n                            </td>\n                        </tr>\n                        <tr >\n                            <td colSpan='2' className='tr-row'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Description</FormLabel>\n\n                                <TextField\n                                    multiline rows={5}\n                                    fullWidth\n                                    type={'text'} onChange={(e) => onValueChange(e)}\n                                    name='description'\n                                    value={description}\n                                ></TextField>\n\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td colSpan='2' className='tr-row'>\n                                <FormLabel id=\"demo-controlled-radio-buttons-group\">Payment Proof</FormLabel>\n                                <br />\n                                <span className=\"input-file\" >\n                                    <FileBase64\n                                        type=\"file\"\n                                        sx={{ display: 'none' }}\n                                        multiple={false}\n                                        onDone={({ base64 }) => { handleImageData(base64) }}\n                                    />\n                                </span>\n\n                            </td>\n                        </tr>\n\n                        <tr className='tr-row'>\n                            <td>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => clear()} sx={{\n                                    color: 'red', backgroundColor: '#ffe6e6', borderColor: 'red', ':hover': {\n                                        bgcolor: '#ffe6e6',\n                                        color: 'red',\n                                    }\n                                }}>Reset</Button>\n                            </td>\n                            <td align='right'>\n                                <Button variant=\"contained\" color=\"primary\" onClick={() => validateItemDetails()} sx={{\n                                    color: 'white', backgroundColor: '#7700FF', borderColor: 'white', ':hover': {\n                                        bgcolor: '#7700FF',\n                                        color: 'black',\n                                    }\n                                }} disabled={buttonDisabled}>\n                                {isLoading && <FontAwesomeIcon icon=\"spinner\" spin /> }\n                                {isLoading ? 'Adding...' : 'Add Item'}\n                                </Button>\n                            </td>\n                        </tr>\n\n                    </tbody>\n\n                </table>\n            </StyledTable>\n\n        </Container >\n\n\n    );\n}\n\nexport default ItemForm;","import { Button, Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport ItemForm from \"../Items/ItemForm\";\nimport EditItem from \"../Items/EditItem\";\n\nexport default function Popup(props){\n    console.log('popup')\n    const {setRender, showModal,setShowModal, formType} = props;\n    const {openDialog, currItem} = showModal;\n    return(\n        <Dialog open= {openDialog} maxWidth='md'>\n            <DialogTitle>\n            <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {formType} Item Details\n                    </Typography>\n                    <Button\n                        color=\"secondary\"\n                        onClick={()=>setShowModal({...showModal, openDialog: false})}>\n                        <CloseIcon />\n                    </Button>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers sx= {{paddingY:5}}>\n              {formType === 'Add'? <ItemForm setRender = {setRender} showModal= {showModal} setShowModal = {setShowModal} /> : <EditItem setRender = {setRender} cItem = {currItem} showModal = {showModal} setShowModal = {setShowModal}/>}\n            </DialogContent>\n        </Dialog>\n    );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;"],"names":["Date","styled","DatePicker","StyledTable","Table","props","user","JSON","parse","localStorage","getItem","useState","title","amount","category","paymentType","dateOfInvoice","dateOfPayment","description","paymentProof","userId","id","itemData","setItemData","setRender","showModal","setShowModal","isLoading","setIsLoading","Cookie","set","path","value","error","errorMessage","errors","setErrors","addItemDetails","createItem","openDialog","toast","position","autoClose","hideProgressBar","closeOnClick","theme","buttonDisabled","console","log","onValueChange","e","target","name","Container","colSpan","FormLabel","TextField","variant","fullWidth","type","onChange","helperText","match","className","RadioGroup","row","FormControlLabel","control","Radio","required","label","FormHelperText","LocalizationProvider","dateAdapter","AdapterDayjs","renderInput","params","date","multiline","rows","sx","display","multiple","onDone","img","fileExtension","split","includes","alert","length","handleImageData","base64","Button","color","onClick","backgroundColor","borderColor","bgcolor","align","errorFields","Object","keys","newErrorValues","values","cnt","index","currentField","validateItemDetails","disabled","icon","spin","Popup","formType","currItem","Dialog","open","maxWidth","DialogTitle","style","Typography","component","flexGrow","Close","DialogContent","dividers","paddingY","EditItem","cItem","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","DialogTitleRoot","slot","overridesResolver","styles","root","padding","flex","React","inProps","ref","useThemeProps","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","DialogContext","titleId","_jsx","_extends","clsx"],"sourceRoot":""}