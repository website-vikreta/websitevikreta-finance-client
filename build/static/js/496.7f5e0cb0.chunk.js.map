{"version":3,"file":"static/js/496.7f5e0cb0.chunk.js","mappings":"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","sources":["components/Items/ItemForm.js","components/PopupModals/Popup.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport FileBase64 from 'react-file-base64';\n\nimport { toast } from 'react-toastify';\nimport Cookie from 'universal-cookie';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { TextField, Container, FormHelperText, FormControlLabel, FormLabel, RadioGroup, Radio } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport styled from \"@emotion/styled\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createItem } from '../../api/index';\nimport '../../styles/itemform.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Date = styled(DatePicker)`\n    width: 300px\n`;\n\nconst ItemForm = (props) => {\n\n   let user = JSON.parse(localStorage.getItem('user-info'));\n\n   const [itemData, setItemData] = useState({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '', userId: user.id });\n   const { title, amount, category, paymentType, dateOfInvoice, dateOfPayment, description, paymentProof, userId } = itemData;\n\n   const { setRender, showModal, setShowModal } = props;\n\n   const loadingRef = useRef(false);\n\n   var cookie = new Cookie();\n   cookie.set('user', userId, { path: '/' })\n   const [errors, setErrors] = useState({\n      title: {\n         value: title,\n         error: false,\n         errorMessage: ''\n      },\n      amount: {\n         value: amount,\n         error: false,\n         errorMessage: ''\n      },\n      category: {\n         value: category,\n         error: false,\n         errorMessage: ''\n      },\n      paymentType: {\n         value: paymentType,\n         error: false,\n         errorMessage: ''\n      },\n      dateOfInvoice: {\n         value: dateOfInvoice,\n         error: false,\n         errorMessage: ''\n      },\n      dateOfPayment: {\n         value: dateOfPayment,\n         error: false,\n         errorMessage: ''\n      }\n   })\n\n   function validateItemDetails() {\n\n      loadingRef.current = true;\n\n      const errorFields = Object.keys(errors);\n      let newErrorValues = { ...errors }\n      let values = Object.values(itemData)\n      let countErrors = 0;\n      for (let index = 0; index < errorFields.length; index++) {\n         const currentField = errorFields[index];\n         const currentValue = values[index];\n         \n         if (currentValue === '' || ((currentField === 'dateOfInvoice'|| currentField === 'dateOfPayment') && currentValue === null)) {\n            countErrors = countErrors + 1;\n            newErrorValues = {\n               ...newErrorValues,\n               [currentField]: {\n                  ...newErrorValues[currentField],\n                  error: true,\n                  errorMessage: 'This field is required'\n               }\n            }\n         }\n\n      }\n      \n\n      setErrors(newErrorValues);\n      if (countErrors !== 0) loadingRef.current = false;\n      if (countErrors === 0) addItemDetails();\n      setTimeout(() => {\n         loadingRef.current = false;\n\n      }, 2000);\n\n   }\n   const addItemDetails = async () => {\n\n      await createItem(itemData);\n      setShowModal({ ...showModal, openDialog: false });\n      setRender('addSet');\n\n      toast.success(\"Item Added Successfully!!\", {\n         position: \"top-center\",\n         autoClose: 2000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         theme: \"light\",\n      });\n   }\n\n   const clear = () => {\n      setItemData({ title: '', amount: '', category: '', paymentType: '', dateOfInvoice: null, dateOfPayment: null, description: '', paymentProof: '' });\n   }\n\n   const onValueChange = (e) => {\n\n      setErrors({\n         ...errors,\n         [e.target.name]: {\n            ...errors[e.target.name],\n            error: false,\n            errorMessage: ''\n         }\n      })\n      setItemData({ ...itemData, [e.target.name]: e.target.value })\n   }\n   const setDateOfInvoice = (date) => {\n      setItemData({ ...itemData, dateOfInvoice: date })\n      setErrors({...errors, dateOfInvoice: {...errors[dateOfInvoice], error: false, errorMessage: ''}})\n   }\n   const setDateOfPayment = (date) => {\n      setItemData({ ...itemData, dateOfPayment: date })\n      setErrors({...errors, dateOfPayment: {...errors[dateOfPayment], error: false, errorMessage: ''}})\n   }\n\n   const handleImageData = (img) => {\n\n      setItemData({ ...itemData, paymentProof: img });\n      const validExtensions = ['png', 'jpeg', 'jpg', 'pdf'];\n      const fileExtension = img.split(';')[0].split('/')[1]\n      if (!validExtensions.includes(fileExtension)) {\n         alert('File must be in img and pdf format');\n      }\n      const newRes = (img.length * (3 / 4)) - 2;\n      const size = (newRes / (1024 * 1024)); //1048576;2,560,181\n\n      if (size > 1.5) {\n         alert('File limit exceed');\n      }\n      console.log(paymentProof);\n\n   }\n\n   return (\n\n      <Container>\n         <div className=\"item-form\">\n            <div >\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Item Title <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField variant='outlined' fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  error={(errors.title.error)}\n                  helperText={(errors.title.error && errors.title.errorMessage)}\n                  name='title' value={title}\n                  size=\"small\"\n               ></TextField>\n            </div>\n            <div >\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Amount <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField type={'text'} onChange={(e) => onValueChange(e)}\n                  name='amount' fullWidth\n                  error={(errors.amount.error) || (amount !== '' && !amount.match(/^\\d+$/))}\n                  helperText={(errors.amount.error && errors.amount.errorMessage) || (!amount.match(/^\\d+$/) && amount !== '' ? 'Only digits are allowed' : '')}\n                  value={amount}\n                  size=\"small\"\n               ></TextField>\n            </div>\n\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Category <span className=\"text-danger\">*</span></FormLabel>\n\n               <TextField fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  name='category'\n                  error={(errors.category.error)}\n                  helperText={(errors.category.error && errors.category.errorMessage)}\n                  value={category}\n                  size=\"small\"\n               ></TextField>\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Payment Type <span className=\"text-danger\">*</span></FormLabel>\n\n               <RadioGroup row\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  name=\"paymentType\"\n                  value={paymentType}\n                  onChange={(e) => onValueChange(e)}\n               >\n                  <FormControlLabel value=\"Income\" control={<Radio required={true} />} label=\"Income\" />\n                  <FormControlLabel value=\"Expense\" control={<Radio required={true} />} label=\"Expense\" />\n               </RadioGroup>\n               <FormHelperText error>{errors.paymentType.errorMessage}</FormHelperText>\n            </div>\n            <div className=\"grid grid-2\">\n               <div sx={{padding: '20px'}}>\n                  <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Date of Invoice <span className=\"text-danger\">*</span></FormLabel>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                     <Date\n                        name='dateOfInvoice'\n                        renderInput={(params) => <TextField {...params} size=\"small\" />}\n                        value={dateOfInvoice}\n                        onChange={(date) => setDateOfInvoice(date)}\n                     />\n                  </LocalizationProvider>\n                 <FormHelperText error>{errors.dateOfInvoice.error && errors.dateOfInvoice.errorMessage}</FormHelperText>\n               </div>\n               <div>\n                  <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Date of Payment <span className=\"text-danger\">*</span></FormLabel>\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\n                     <Date\n                        name='dateOfPayment'\n                        renderInput={(params) => <TextField {...params} size=\"small\" />}\n                        value={dateOfPayment}\n                        onChange={(date) => setDateOfPayment(date)}\n                     />\n                  </LocalizationProvider>\n                  <FormHelperText error>{errors.dateOfPayment.error && errors.dateOfPayment.errorMessage}</FormHelperText>\n               </div>\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Description</FormLabel>\n\n               <TextField\n                  multiline rows={5}\n                  fullWidth\n                  type={'text'} onChange={(e) => onValueChange(e)}\n                  name='description'\n                  value={description}\n                  size=\"small\"\n               ></TextField>\n\n            </div>\n            <div>\n               <FormLabel className=\"label\" id=\"demo-controlled-radio-buttons-group\">Payment Proof</FormLabel>\n               \n               <span className=\"input-file\" >\n                  <FileBase64\n                     type=\"file\"\n                     sx={{ display: 'none' }}\n                     multiple={false}\n                     onDone={({ base64 }) => { handleImageData(base64) }}\n                  />\n               </span>\n\n            </div>\n\n            <div className=\"grid grid-2 mt-4\">\n               <button className=\"btn btn-secondary btn-danger\" onClick={() => clear()}>\n                  Reset\n               </button>\n               <button className=\"btn btn-primary\" disabled={loadingRef.current} onClick={() => validateItemDetails()}>\n                  {loadingRef.current ? 'Adding...' : 'Add Item'}\n                  {loadingRef.current && <FontAwesomeIcon icon=\"spinner\" spin />}\n               </button>\n            </div>\n         </div>\n\n      </Container >\n\n\n   );\n}\n\nexport default ItemForm;","import { Button, Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport ItemForm from \"../Items/ItemForm\";\nimport EditItem from \"../Items/EditItem\";\n\nexport default function Popup(props) {\n\n   const { setRender, showModal, setShowModal, formType } = props;\n   const { openDialog, currItem } = showModal;\n   return (\n      <Dialog open={openDialog} maxWidth='md'>\n         <DialogTitle>\n            <div style={{ display: 'flex' }}>\n               <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                  {formType} Item Details\n               </Typography>\n               <Button\n                  sx={{ padding: 0, minWidth: 0 }}\n                  color=\"secondary\"\n                  onClick={() => setShowModal({ ...showModal, openDialog: false })}>\n                  <CloseIcon />\n               </Button>\n            </div>\n         </DialogTitle>\n         <DialogContent dividers sx={{ paddingY: 2, paddingX: 0 }}>\n            {formType === 'Add' ? <ItemForm setRender={setRender} showModal={showModal} setShowModal={setShowModal} /> : <EditItem setRender={setRender} cItem={currItem} showModal={showModal} setShowModal={setShowModal} />}\n         </DialogContent>\n      </Dialog>\n   );\n}"],"names":["Date","styled","DatePicker","_templateObject","_taggedTemplateLiteral","props","user","JSON","parse","localStorage","getItem","_useState","useState","title","amount","category","paymentType","dateOfInvoice","dateOfPayment","description","paymentProof","userId","id","_useState2","_slicedToArray","itemData","setItemData","setRender","showModal","setShowModal","loadingRef","useRef","Cookie","set","path","_useState3","value","error","errorMessage","_useState4","errors","setErrors","addItemDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","createItem","_objectSpread","openDialog","toast","position","autoClose","hideProgressBar","closeOnClick","theme","stop","apply","arguments","onValueChange","e","_defineProperty","target","name","_jsx","Container","children","_jsxs","className","FormLabel","TextField","variant","fullWidth","type","onChange","helperText","size","match","RadioGroup","row","FormControlLabel","control","Radio","required","label","FormHelperText","sx","padding","LocalizationProvider","dateAdapter","AdapterDayjs","renderInput","params","date","setDateOfInvoice","setDateOfPayment","multiline","rows","FileBase64","display","multiple","onDone","_ref2","img","fileExtension","split","includes","alert","length","console","log","handleImageData","base64","onClick","disabled","current","errorFields","Object","keys","newErrorValues","values","countErrors","index","currentField","currentValue","setTimeout","validateItemDetails","FontAwesomeIcon","icon","spin","Popup","formType","currItem","Dialog","open","maxWidth","DialogTitle","style","Typography","component","flexGrow","Button","minWidth","color","CloseIcon","DialogContent","dividers","paddingY","paddingX","ItemForm","EditItem","cItem"],"sourceRoot":""}